<link href="<?php echo get_template_directory_uri() . '/CoreTheme/ShortCodes/lib/Shortcode.css' ?>" rel="stylesheet" type="text/css">
<link href="<?php echo get_template_directory_uri() . '/lib/bootstrap/css/bootstrap.min.css' ?>" rel="stylesheet" type="text/css">
<link href="<?php echo get_template_directory_uri() . '/lib/bootstrap/css/bootstrap-responsive.min.css' ?>" rel="stylesheet" type="text/css">
<link href="http://twitter.github.com/bootstrap/assets/js/google-code-prettify/prettify.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script type="text/javascript" src="<?php echo get_template_directory_uri() . '/lib/bootstrap/js/bootstrap.min.js' ?>"></script>
<script type="text/javascript" src="<?php echo get_template_directory_uri() . '/CoreTheme/ShortCodes/lib/js/MarketingCodes.js' ?>"></script>
<script type="text/javascript" src="<?php echo get_template_directory_uri() . '/CoreTheme/ShortCodes/lib/js/ShortCode.js' ?>"></script>
<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/google-code-prettify/prettify.js"></script>

<script>
! function ($) {
    $(function () {
        window.prettyPrint && prettyPrint()
    })
}(window.jQuery)
</script>

<div class="tabbable">
  <ul class="nav nav-tabs">
    <li class="active"><a href="#marketing" data-toggle="tab">Marketing Pages!</a></li>
  </ul>
  <div class="tab-content">
    <div class="tab-pane active" id ="marketing">
	    <h1>Marketing Page Layouts!</h1>
	    <p>Creating a marketing page layout is simple. We have organized a set of known short codes and a few not so known short codes
	    to help you out when making a marketing page.</p>
	    <p>Marketing pages are generlly pages that describe one or more products. We do this through a two collumn row, which usually houses about 3-6
	    short entries on the product, or products them seleves.</p>
	    <div class="alert alert-info">We suggest that you do not give the page a title as that can affect the layout and look of the page it's self.</div>
	    <hr>
	    <h2>JumboTron</h2>
	    <div class="well">
	    	<input type="button" onClick="jumbotron()" class="btn btn-success pull-right" value="Insert Jumbotron Wrapper"/>
	    	<h3>Creating the Jumbotron</h3>
	    	<p>The jumbotron short code <code>[jumbotron][/jumbotron]</code> is really a wrapper for the  header based content. We will need to populate the header with three other
	    	short codes, once which adds a title and the other which adds the descriptive text. The final short code wil add a button, this button can lead people to the content4
	    	about your product or be a download button for your software.</p>
	    	<hr>
	    	<h3>Title, Lead and Button</h3>
	    	<input type="button" onClick="marketingTitle()" class="btn btn-success pull-right" value="Insert Marketing Title"/>
	    	<p>The title <code>[marketingTitle][/marketingTitle]</code> is used inside the jumbotron tags to give the perception of a title.</p>
	    	<div class="alert alert-info">You can also replace this with an image.</div>
	    	<input type="button" onClick="marketingLead()" class="btn btn-success pull-right" value="Insert Marketing Headline"/>
	    	<p>The lead <code>[marketingLead][/marketingLead]</code> is meant to be a small descriptive sentance or two about the product(s) that you are offering.
	    	This is where you can express your products tag line or your companies slogan.</p>
	    	<input type="button" onClick="button()" class="btn btn-success pull-right" value="Insert Marketing Button"/>
	    	<p>This short code is the same short code used on posts to insert buttons, we take the same parameters and accept the same arguments. the only difference is that
	    	we suggest you use the "large" option for the size param, as the button here should really stand out!</p>
	    	<div class="alert"><strong>ATTN!</strong> We suggest that all of the above, the title, lead and button be placed inside the <code>[jumbotron]</code> tags. your page
	    	may not look proper if you do place them in the jumbotron tags.</div>
	    </div>
	    <hr>
	    <h2>Rows and Content</h2>
	    <div class="well">
	    	<h3>Creating Rows </h3>
	    	<input type="button" onClick="marketingRow()" class="btn btn-success pull-right" value="Insert Marketing Row"/>
	    	<p>Rows allows us to align peices of content across the page. These take in special divs with classes <code>.span1-12</code>, each row should add up
	    	to 12, any more and it will break.</p>
	    	<p>Inserting a row uses the <code>[row]</code> tage to which you put content between the tags. row are responsive and will respond to screen size.</p>
	    	<hr>
	    	<h3>Adding in Content</h3>
	    	<input type="button" onClick="marketingCollumnOne()" class="btn btn-success pull-right" value="Insert Marketing Collumn One"/>
	    	<p>In our case we have two very special short codes called <code>[collumnOne]</code> and <code>[collumnTwo]</code>. These collumns use <code>.span6</code>
	    	as their class, and thus add up to twelve.</p>
	    	<input type="button" onClick="marketingCollumnTwo()" class="btn btn-success pull-right" value="Insert Marketing Collumn Two"/>
	    	<p>In bweteen the collumn tags you would use <code>h4</code> tags for the heading. 
	    	<div class="alert alert-info">You can add your own spans in between the row tags via creating divs that contian the appropriate class class.</div>
	    </div>
    </div>
    </div>
</div>